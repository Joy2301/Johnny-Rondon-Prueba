@page "/Guardar"
@page "/Guardar/{id:int}"

@inject NavigationManager NavigationManager
@inject IPersonaService PersonaService

<div class="container">

    <h1 class="display-6">Guardar Personas</h1>
    <br>
    <p>
        Utilize el formulario siguiente para registrar o actualizar a las Personas
    </p>
    <br>

    <EditForm Model="@persona">
        <table class="table">
            <tr>
                <td> 
                    <p>
                        <strong>Nombre:</strong>
                    </p>
                </td>
                <td><input type="text" class="form-control col-sm-4" placeholder="Ingresa el Nombre" @bind="@persona.Nombre"></td>
            </tr>
            <tr>
                <td> 
                    <p>
                        <strong>Fecha de Nacimiento:</strong>
                    </p>
                </td>
                <td>
                    <InputDate class="form-control col-sm-4" placeholder="Ingresa la Fecha de nacimiento" @bind-Value="@persona.FechaNacimiento"/>
                <br>
                <p>@Estado</p>
                </td>
            </tr>
            <tr>
                <td>
                    <input type="submit" value="Guardar" class="btn btn-primary" @onclick="SavePersona"/>
                    <input type="button" value="Cancelar" class="btn btn-secondary" @onclick="Cancelar"/>
                </td>
            </tr>
        </table>
    </EditForm>

</div>


@code {
    [Parameter]
    public int id {get; set;}
    public string Estado { get; set; }
    Persona persona = new Persona();

    protected async Task SavePersona()
    {
        //Comprobamos que no hay campos vacios
        if(persona.Nombre == "")
        {
            Estado = "Debe rellenar todos los campos";
        }
        else
        {
            try
            {
                //Se registra a la persona
                await PersonaService.SavePersona(persona);

                Estado = "Guardado con Exito";

                //Volvemos a la lista de personas
                NavigationManager.NavigateTo("/Lista");
            }
            catch(Exception e)
            {
                Estado = $"Hubo un Error, {e.Message}";
            }
        }
    }

    /*  
        Una vez obtenemos un ID por parametro de la url 
        verificamos que sea distinto de 0 y traemos los datos del registro al formulario
    */
    protected override async Task OnInitializedAsync()
    {
        if (id != 0)
        {
            persona = await PersonaService.GetDetailsPersona(id);
        }
    }

    //Volvemos a la pagina inicial
    private void Cancelar()
    {
        NavigationManager.NavigateTo("/Lista");
    }
}